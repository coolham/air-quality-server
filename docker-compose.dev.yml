version: '3.8'

services:
  # 开发环境数据库
  mysql-dev:
    image: mysql:8.0
    container_name: air-quality-mysql-dev
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: air_quality_dev
      MYSQL_USER: root
      MYSQL_PASSWORD: admin
    ports:
      - "3307:3306"
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ./scripts/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - air-quality-dev-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # 开发环境 Redis
  redis-dev:
    image: redis:7.0-alpine
    container_name: air-quality-redis-dev
    ports:
      - "6380:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - air-quality-dev-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5

  # 开发环境 MQTT Broker (可选，用于测试)
  mosquitto-dev:
    image: eclipse-mosquitto:2.0
    container_name: air-quality-mosquitto-dev
    ports:
      - "1884:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/config/passwd:/mosquitto/config/passwd
    networks:
      - air-quality-dev-network
    restart: unless-stopped

  # 开发环境应用程序（可选，用于容器化开发）
  air-quality-server-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: air-quality-server-dev
    ports:
      - "8081:8080"
      - "1885:1883"
    environment:
      - CONFIG_FILE=config/config.dev.yaml
      - DB_HOST=mysql-dev
      - DB_PORT=3306
      - DB_USERNAME=root
      - DB_PASSWORD=admin
      - DB_NAME=air_quality_dev
      - REDIS_HOST=redis-dev
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
    depends_on:
      mysql-dev:
        condition: service_healthy
      redis-dev:
        condition: service_healthy
    volumes:
      - .:/app
      - ./config:/app/config
      - ./logs:/app/logs
    networks:
      - air-quality-dev-network
    restart: unless-stopped
    profiles:
      - app

volumes:
  mysql_dev_data:
  redis_dev_data:

networks:
  air-quality-dev-network:
    driver: bridge
